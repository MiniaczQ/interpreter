/*
Returns a list from
0
to
max - 1
*/
fn range(max: int) -> int[] {
    let list: int[] = [];
    let index: int = 0;

    while index < max {
        index = index + 1;
        append(list, i);
    }

    return list;
}

fn filter_positive(in_list: float[]) -> float[] {
    let out_list: float[] = [];

    for x in in_list {
        if x > 0.0 {
            append(out_list, x);
        }
    }

    return out_list;
}

fn main(argc: int, argv: string[]) {
    if argc != 1 {
        exit();
    };

    print(argv[0].to_string());

    let my_list: int[] = [x if x % 2 == 0 else 1 + x * 2 for x in range(5)];

    print(my_list);     // [0, 3, 2, 7, 4]

    let new_list = filter_positive([-6.0, -3.0, 0.0, 2.0, 4.0]);

    print(len(new_list));
}